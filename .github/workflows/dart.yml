# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build APK and upload to DeployGate

on:
  push:
    branches: [ develop, main, build ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    name: Build APK and upload to DeployGate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
      - run: flutter --version

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze

      - run: flutter build apk

      - name: Upload APK file to DeployGate
        uses: jmatsu/dg-upload-app-action@v0.2.0
        with:
          app_owner_name: kevinthai
          api_token: ${{ secrets.DEPLOYGATE_API_TOKEN }}
          app_file_path: build/app/outputs/flutter-apk/*.apk